#include <SDL3/SDL_error.h>

#include <SDL3/SDL_stdinc.h>
#include <SDL3/SDL_video.h>
#include <boost/stacktrace/stacktrace.hpp>
#include <memory>
#include <vector>

#include "openminecraft/boot/om_boot.hpp"
#include "openminecraft/i18n/om_i18n_res.hpp"
#include "openminecraft/log/om_log_common.hpp"
#include "openminecraft/log/om_log_threadname.hpp"
#include "openminecraft/mem/om_mem_allocator.hpp"
#include "openminecraft/renderer/om_renderer_layer.hpp"
#include "openminecraft/renderer/vk/om_renderer_layer_vk.hpp"
#include "openminecraft/util/om_util_version.hpp"
#include "openminecraft/vfs/om_vfs_base.hpp"
#include <SDL3/SDL.h>
#include <boost/stacktrace.hpp>
#include <fmt/format.h>

using namespace openminecraft;

unsigned char res_bundle[] = {
    0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x2d, 0x62, 0x6f, 0x6f, 0x74, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6a,
    0x73, 0x6f, 0x6e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x61,
    0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x7a, 0x68, 0x5f, 0x63, 0x6e, 0x22,
    0x2c, 0x20, 0x22, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x22, 0x2c, 0x20, 0x22, 0x6a, 0x61, 0x5f, 0x6a, 0x70, 0x22, 0x5d,
    0x0a, 0x7d, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63,
    0x72, 0x61, 0x66, 0x74, 0x2d, 0x62, 0x6f, 0x6f, 0x74, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x7a, 0x68, 0x5f, 0x63,
    0x6e, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x0a, 0x20, 0x20, 0x20,
    0x20, 0x22, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x62, 0x6f, 0x6f,
    0x74, 0x2e, 0x61, 0x72, 0x67, 0x22, 0x3a, 0x20, 0x22, 0xe5, 0x86, 0x85, 0xe6, 0xa0, 0xb8, 0xe5, 0x8f, 0x82, 0xe6,
    0x95, 0xb0, 0x3a, 0x20, 0x22, 0x0a, 0x7d, 0x0a, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x70, 0x65,
    0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2d, 0x62, 0x6f, 0x6f, 0x74, 0x2f, 0x6c, 0x61, 0x6e,
    0x67, 0x2f, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x61, 0x72, 0x67, 0x22, 0x3a, 0x20, 0x22, 0x4b, 0x65, 0x72, 0x6e,
    0x65, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x73, 0x3a, 0x20, 0x22, 0x0a, 0x7d, 0x0a, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2d, 0x72, 0x65, 0x6e,
    0x64, 0x65, 0x72, 0x65, 0x72, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6a, 0x73, 0x6f,
    0x6e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x61, 0x76, 0x61,
    0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x7a, 0x68, 0x5f, 0x63, 0x6e, 0x22, 0x2c, 0x20,
    0x22, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x22, 0x2c, 0x20, 0x22, 0x6a, 0x61, 0x5f, 0x6a, 0x70, 0x22, 0x5d, 0x0a, 0x7d,
    0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x2d, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x7a, 0x68,
    0x5f, 0x63, 0x6e, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x4b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x0a, 0x20,
    0x20, 0x20, 0x20, 0x22, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x72,
    0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x76, 0x6b, 0x2e, 0x64, 0x65, 0x76, 0x63, 0x6f, 0x75, 0x6e, 0x74,
    0x22, 0x3a, 0x20, 0x22, 0xe5, 0x85, 0xb1, 0xe6, 0x9c, 0x89, 0x20, 0x7b, 0x7d, 0x20, 0xe4, 0xb8, 0xaa, 0x20, 0x56,
    0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x20, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x22, 0x0a, 0x7d, 0x26, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2d, 0x72,
    0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x2e,
    0x6a, 0x73, 0x6f, 0x6e, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22,
    0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65,
    0x72, 0x65, 0x72, 0x2e, 0x76, 0x6b, 0x2e, 0x64, 0x65, 0x76, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x20, 0x22,
    0x7b, 0x7d, 0x20, 0x56, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x66,
    0x6f, 0x75, 0x6e, 0x64, 0x22, 0x0a, 0x7d};
unsigned int res_bundle_len = 653;

namespace openminecraft::boot
{
int boot(std::vector<std::string> args)
{
    log::multithread::registerCurrentThreadName("engineMain");
    auto logger = std::make_unique<log::OMLogger>("boot");
    SDL_SetMemoryFunctions(mem::allocator::tracedMallocSDL, mem::allocator::tracedCallocSDL,
                           mem::allocator::tracedReallocSDL, mem::allocator::tracedFreeSDL);
    if (!SDL_Init(SDL_INIT_EVENTS))
    {
        logger->info("SDL Status: {}", SDL_GetError());
    }

    /*if (!SDL_ShowSimpleMessageBox(SDL_MESSAGEBOX_INFORMATION, "Hello World",
                                  "!! Your SDL project successfully runs on Android!!", NULL))
    {
        logger->info("SDL Status: {}", SDL_GetError());
        return 1;
    }*/

    logger->info("Setting up i18n environment...");
    i18n::res::registerModule("openminecraft-boot");
    i18n::res::registerModule("openminecraft-renderer");
    vfs::fsmountBundle({res_bundle, res_bundle_len}, "/bootassets");
    i18n::res::pushResourceRoot("/bootassets");
    i18n::res::load();

    logger->info(i18n::res::translate("openminecraft.boot.arg"));
    for (auto a : args)
    {
        logger->info(a);
    }

    renderer::AppInfo a = {"OpenMinecraft", util::Version(1, 0, 0, 0), "OpenMinecraft Engine",
                           util::Version(1, 0, 0, 0), util::Version(1, 0, 0, 0)};
    auto renderer = std::make_unique<renderer::vk::OMRendererVk>(a);

    vfs::fsumount("/bootassets");

    SDL_Quit();

    return 0;
}
} // namespace openminecraft::boot
